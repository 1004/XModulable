apply plugin: 'com.android.library'

android {
    def versions = rootProject.ext.versions
    compileSdkVersion versions.compileSdkVersion



    defaultConfig {
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode versions.versionCode
        versionName versions.versionName

        def moduleName = project.getName()
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        // ARouter处理器所需参数
                        moduleName   : moduleName,
                        // Component处理器所需参数
                        componentName: moduleName
                ]
            }
        }
    }

    buildTypes {
        release {
            // 关闭混淆
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/LICENSE.txt'
    }
}

dependencies {
    def dependencies = rootProject.ext.dependencies
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation dependencies.support.appcompat
    implementation dependencies.support.constraint

    // arouter
    api dependencies.arouter.api
    annotationProcessor dependencies.arouter.annotationProcessor

    api project(':component-api')
    annotationProcessor project(':component-compiler')

    api project(':basiclib')
    api project(':basicres')
}
